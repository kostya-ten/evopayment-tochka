import React, {useState} from "react";
import {
  Box,
  BoxProps,
  Button,
  chakra,
  Checkbox,
  FormControl,
  FormLabel,
  Heading,
  HTMLChakraProps,
  Link,
  Stack,
  useColorModeValue,
  useDisclosure,
  VStack
} from "@chakra-ui/react";
import {DaDataParty, DaDataSuggestion, PartySuggestions} from 'react-dadata';
import {settings} from '../settings';
import 'react-dadata/dist/react-dadata.css';
import AgreementPersonalData from "./agreement_personal_data";


export const Card = (props: BoxProps) => (
  <Box
    bg={useColorModeValue('white', 'gray.700')}
    py="8"
    px={{ base: '4', md: '10' }}
    shadow="base"
    rounded={{ sm: 'lg' }}
    {...props}
  />
)

export const Logo = (props: HTMLChakraProps<'svg'>) => {
  return (
    <chakra.svg
      color={useColorModeValue('blue.500', 'blue.300')}
      aria-hidden
      viewBox="0 0 146 22"
      fill="none"
      h="6"
      flexShrink={0}
      {...props}
    >
      <path d="M39.9333 18.5867L39.9352 18.5862L39.289 21.8735H23.2632C23.2632 21.8735 23.651 19.7241 23.7802 18.8391C23.9094 18.0804 23.9094 17.5747 23.9094 16.0575V5.43676C23.9094 5.05839 23.8772 4.68002 23.845 4.30165L23.8448 4.29888L23.8445 4.29587C23.8124 3.9175 23.7802 3.53921 23.7802 3.16092C23.7802 3.11099 23.778 3.06329 23.774 3.01745C23.7687 2.95518 23.7604 2.89637 23.7506 2.84042C23.7468 2.81913 23.7428 2.79821 23.7387 2.77761C23.7283 2.72598 23.717 2.67667 23.706 2.62905L23.6932 2.57303C23.6859 2.54077 23.679 2.50921 23.6731 2.47803C23.6667 2.44462 23.6614 2.41174 23.6575 2.37918C23.6557 2.36444 23.6543 2.34977 23.6532 2.33511C23.6518 2.31535 23.651 2.2956 23.651 2.27584C23.6405 2.19435 23.6301 2.11448 23.6196 2.03623C23.6093 1.95929 23.5989 1.88397 23.5884 1.81019C23.3476 2.27777 23.0939 2.7932 22.818 3.35353L22.5971 3.8019C22.3631 4.27611 22.1128 4.77942 21.8416 5.31028C21.5645 5.85255 21.3244 6.35849 21.1017 6.82799L21.101 6.82915C21.0371 6.96397 20.9746 7.0957 20.9131 7.2245C20.7893 7.48364 20.6692 7.73066 20.5492 7.96549L15.5088 19.5977L16.4135 21.747H9.8222L3.8772 7.7126C3.69695 7.30962 3.52183 6.91165 3.34987 6.5207C2.65847 4.94904 2.01685 3.49082 1.2924 2.27584C0.775408 1.39077 0.387704 0.758589 0 0.126406H8.27138C8.27138 0.126406 8.27138 0.379294 8.40059 0.758589C8.65909 2.02295 9.04679 3.54021 9.69299 5.18387C9.95149 6.06894 10.3392 7.08042 10.7269 8.0919L14.2164 16.5632L17.7059 7.7126C18.2228 6.32183 18.869 4.55169 19.5152 2.65514L20.4199 0.126406H23.1937C23.1746 0.0826499 23.1546 0.0405147 23.134 0H39.0305L39.8059 3.28732C39.6463 3.26502 39.4987 3.24272 39.3511 3.22041C38.6624 3.11631 37.9737 3.01221 36.058 2.90803C35.8514 2.90803 35.6085 2.90479 35.3393 2.89938C35.0312 2.89321 34.6888 2.8841 34.327 2.87376L33.5658 2.85107C32.455 2.81751 31.2665 2.78162 30.3714 2.78162V9.10345C32.5685 9.10345 34.5071 8.97697 36.058 8.85056C36.4221 8.85056 36.7452 8.81043 37.0273 8.7754C37.2458 8.74823 37.4397 8.72416 37.6089 8.72416H38.2551L37.3504 12.0115C36.6291 11.9528 36.1034 11.8939 35.5784 11.8352L35.573 11.8345C34.9711 11.7671 34.3692 11.6996 33.4732 11.6322C33.2129 11.6322 32.8898 11.6117 32.5039 11.5872C31.9314 11.5508 31.2205 11.5057 30.3714 11.5057V19.2184C32.6962 19.2184 35.15 19.0921 37.6039 18.9657L37.6089 18.9655C38.6417 18.8392 39.2877 18.7129 39.9333 18.5867Z" fill="#002337"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M57.3825 11.1264C57.5117 11.1264 57.5117 11.1264 57.641 10.9999C58.5457 10.6206 59.4503 10.1149 60.2258 9.48275C61.1304 8.59767 61.6474 7.5862 61.6474 6.32183C61.6474 5.05746 61.3889 3.9195 61.0012 3.16092C60.4842 2.27584 59.8381 1.64366 58.9334 1.26437C58.1579 0.884995 57.124 0.5057 56.0901 0.379294C54.9269 0.252811 53.6346 0.126406 52.2129 0.126406H41.3568C41.6153 0.632183 41.7445 1.39077 41.8738 2.40225C42.1322 4.17239 42.1322 5.81605 42.1322 7.33331V16.1839C42.1322 17.7011 42.1322 18.2068 42.003 18.9655C41.8738 19.8505 41.486 21.9999 41.486 21.9999H49.3697C49.2404 21.4942 49.1112 20.7356 48.9819 19.5977C48.7234 17.8275 48.7234 16.3103 48.7234 14.6666V12.1379H50.4036C51.9544 12.1379 53.1176 12.6437 53.893 14.2873L54.9269 16.3103L57.641 21.8735H64.6199L57.3825 11.1264ZM50.662 2.52873C52.3422 2.52873 53.5053 2.90803 54.2808 3.54021C54.9269 4.17239 55.1854 5.05746 55.1854 6.32183C55.1854 7.5862 54.6685 8.59767 53.7638 9.22986C52.9883 9.60915 52.0837 9.98845 50.7913 10.1149C50.6878 10.1149 50.575 10.124 50.4555 10.1372C50.3673 10.1469 50.2754 10.1589 50.1809 10.1713C49.9237 10.205 49.6467 10.2413 49.3697 10.2413H48.5942V2.52873H50.662Z" fill="#002337"/>
      <path d="M75.7345 2.65514C76.3732 2.65714 77.5556 2.67235 78.4486 2.78154C79.6113 2.90795 80.7753 3.03459 81.9381 3.41373L81.1626 0.126406H63.4567L62.6813 3.41373C63.8442 3.03451 65.007 2.90803 66.1699 2.78154C67.0746 2.65514 68.4971 2.65514 69.1433 2.65514V14.5402C69.1433 16.3103 69.1433 17.3218 69.0141 18.7126C68.924 19.329 68.7713 20.1909 68.6432 20.9135L68.6411 20.9257L68.629 20.9934L68.618 21.0559C68.5722 21.3152 68.5303 21.552 68.4971 21.747H76.3807C76.3652 21.6557 76.3478 21.5552 76.3289 21.4475C76.3003 21.2842 76.2684 21.1043 76.2348 20.9147C76.1067 20.1919 75.9539 19.3294 75.8638 18.7126C75.7345 17.3218 75.7345 16.3103 75.7345 14.5402V2.65514Z" fill="#002337"/>
      <path d="M100.288 18.5867L100.29 18.5862L99.5147 22H83.4889C83.4889 22 83.8766 19.8506 84.0059 18.9655C84.1351 18.2069 84.1351 17.7011 84.1351 16.1839V5.56324C84.1351 5.18387 84.1028 4.80458 84.0705 4.42528C84.0592 4.29247 84.0479 4.15966 84.0379 4.02677C84.0196 3.78029 84.0059 3.5338 84.0059 3.28732V2.27584C83.8766 1.26437 83.7474 0.505777 83.4889 0H99.3854L100.161 3.28732C100.001 3.26502 99.8537 3.24272 99.7061 3.22041C99.0174 3.11631 98.3286 3.01221 96.4129 2.90803C95.8091 2.90803 94.8948 2.88048 93.9207 2.85107C92.81 2.81751 91.6215 2.78162 90.7263 2.78162V9.10345C92.9234 9.10345 94.862 8.97697 96.4129 8.85056C96.777 8.85056 97.1001 8.81043 97.3822 8.7754C97.6007 8.74823 97.7946 8.72416 97.9638 8.72416H98.61L97.7053 12.0115C96.984 11.9528 96.4584 11.8939 95.9334 11.8352L95.928 11.8345C95.7405 11.8135 95.5529 11.7925 95.3565 11.7716C95.2432 11.7594 95.1268 11.7473 95.0058 11.7352C94.6636 11.7009 94.2839 11.6665 93.8281 11.6322C93.5679 11.6322 93.2448 11.6117 92.8588 11.5872C92.2864 11.5508 91.5755 11.5057 90.7263 11.5057V19.2184C93.0511 19.2184 95.5049 19.0921 97.9588 18.9657L97.9638 18.9655C98.9967 18.8392 99.6427 18.7129 100.288 18.5867Z" fill="#002337"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M117.867 11.1264C117.918 11.1264 117.949 11.1264 117.976 11.1184C118.002 11.1108 118.023 11.0959 118.055 11.0669C118.074 11.0499 118.096 11.0281 118.125 10.9999C119.03 10.6206 119.935 10.1149 120.71 9.48275C121.615 8.59767 122.132 7.5862 122.132 6.32183C122.132 5.05746 121.873 3.9195 121.485 3.16092C120.969 2.27584 120.322 1.64366 119.418 1.26437C118.642 0.884995 117.608 0.5057 116.574 0.379294C115.411 0.252811 114.119 0.126406 112.697 0.126406H101.97C102.229 0.632183 102.358 1.39077 102.487 2.40225C102.746 4.17239 102.746 5.81605 102.746 7.33331V16.1839C102.746 17.7011 102.746 18.2068 102.617 18.9655C102.487 19.8505 102.1 21.9999 102.1 21.9999H109.854C109.725 21.4942 109.595 20.7356 109.466 19.5977C109.208 17.8275 109.208 16.3103 109.208 14.6666V12.1379H110.888C112.439 12.1379 113.602 12.6437 114.377 14.2873L115.411 16.3103L118.125 21.8735H125.104L125.019 21.7471H125.621L126.526 19.2184C126.742 18.585 126.957 17.9958 127.164 17.4322C127.452 16.6456 127.722 15.909 127.947 15.1724C128.014 15.1908 128.088 15.2113 128.17 15.2338C129.208 15.5203 131.459 16.1405 133.375 17.1954C136.477 18.9655 137.64 21.4942 137.64 21.4942V21.6207H145.912C145.783 21.2413 145.395 20.4827 144.878 19.7242C144.153 18.509 143.512 17.0507 142.82 15.4788C142.648 15.088 142.473 14.6902 142.293 14.2873L136.348 0.252889H129.757L130.661 2.40233L125.621 13.908C125.441 14.26 125.261 14.6391 125.069 15.0455C124.846 15.515 124.606 16.021 124.329 16.5632C123.97 17.2648 123.648 17.9183 123.352 18.52C123.279 18.6678 123.208 18.8126 123.138 18.9541L117.867 11.1264ZM109.208 2.52873H111.146C112.826 2.52873 113.99 2.90803 114.765 3.54021C115.411 4.17239 115.67 5.05746 115.67 6.32183C115.67 7.5862 115.153 8.59767 114.248 9.22986C113.473 9.73556 112.568 10.1149 111.405 10.2413C111.225 10.2413 111.017 10.2686 110.794 10.2977C110.537 10.3314 110.26 10.3677 109.983 10.3677H109.208V2.52873ZM135.314 13.908L131.825 5.43676L128.852 13.023C129.066 13.0827 129.395 13.1847 129.812 13.314C131.161 13.7324 133.431 14.4366 135.702 14.9195C135.573 14.5402 135.443 14.2873 135.314 13.908Z" fill="#002337"/>
    </chakra.svg>
  )
}

export default function Index() {
  const { isOpen, onOpen, onClose } = useDisclosure()
  const [inn, setInn] = useState("")
  const [agreeDisabled, setAgreeDisabled] = useState(true)


  const data = function (dadata: DaDataSuggestion<DaDataParty> | undefined) {
    if (dadata){
      setInn(dadata?.data.inn)
    }
  }

  const button_agree = function (event: React.ChangeEvent<HTMLInputElement>) {
    if (event.target.checked){
      setAgreeDisabled(false)
    }
    else {
      setAgreeDisabled(true)
    }
  }

  return (
    <Box
      bg={useColorModeValue('gray.50', 'inherit')}
      minH="100vh"
      py="12"
      px={{ base: '8', lg: '10' }}
    >
      <Box maxW="xl" mx="auto">
        <Logo mx="auto" h="8" mb={{ base: '10', md: '20' }}/>
        {/*<img src="img/logo_vertera.svg" alt="logo" />*/}
        <Heading textAlign="center" size="lg" fontWeight="light" mb="8">
          Открытие расчетного счета
        </Heading>

        <Card>
          <Stack spacing="6">
            <FormControl id="email">
              <FormLabel>Укажите название ООО, ИП или ИНН</FormLabel>
              <PartySuggestions
                token={settings.DaDataKey}
                onChange={data}
                count={3}
                minChars={4}
                filterStatus={['ACTIVE']}

              />;
            </FormControl>

            <FormControl id="agree">
              <VStack spacing={[1, 5]} direction={['column', 'row']}>
                <Checkbox isRequired colorScheme={"green"} size={"md"} spacing={"0.8rem"} onChange={button_agree}>
                  Я принимаю согласие на обработку <Link href="#" color='teal.500' onClick={onOpen}>
                    персональных данных
                  </Link>
                </Checkbox>
              </VStack>
            </FormControl>

            <Button isDisabled={agreeDisabled} type="submit" colorScheme="green" size="lg" fontSize="md">
              Далее
            </Button>
          </Stack>
        </Card>
      </Box>
      <AgreementPersonalData isOpen={isOpen} onClose={onClose} />
    </Box>
  )
}
